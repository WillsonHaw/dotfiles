rosewater: &rosewater "#f5e0dc"
flamingo: &flamingo "#f2cdcd"
pink: &pink "#f5c2e7"
mauve: &mauve "#cba6f7"
red: &red "#f38ba8"
maroon: &maroon "#eba0ac"
peach: &peach "#fab387"
yellow: &yellow "#f9e2af"
green: &green "#a6e3a1"
teal: &teal "#94e2d5"
sky: &sky "#89dceb"
sapphire: &sapphire "#74c7ec"
blue: &blue "#89b4fa"
lavender: &lavender "#b4befe"
text: &text "#cdd6f4"
subtext1: &subtext1 "#bac2de"
subtext0: &subtext0 "#a6adc8"
overlay2: &overlay2 "#9399b2"
overlay1: &overlay1 "#7f849c"
overlay0: &overlay0 "#6c7086"
surface2: &surface2 "#585b70"
surface1: &surface1 "#45475a"
surface0: &surface0 "#313244"
base: &base "#1e1e2e"
mantle: &mantle "#181825"
crust: &crust "#11111b"

general:
  # Commands to run when the WM has started (e.g. to run a script or launch
  # another application). Here we are running a batch script to start Zebar.
  startup_commands: ["shell-exec %userprofile%/.glzr/zebar/start.bat"]

  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: true

  # Whether to switch back and forth between the previously focused
  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: false

  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true

    # Trigger for cursor jump:
    # - 'monitor_focus': Jump when focus changes between monitors.
    # - 'window_focus': Jump when focus changes between windows.
    trigger: "monitor_focus"

gaps:
  # Gap between adjacent windows.
  inner_gap: "8px"

  # Gap between windows and the screen edge.
  outer_gap:
    top: "48px"
    right: "8px"
    bottom: "8px"
    left: "8px"

window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: *mauve

  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: true
      color: *base

window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: 'tiling', 'floating'.
  initial_state: "tiling"

  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: true

      # Whether to show floating windows as always on top.
      shown_on_top: false

    fullscreen:
      # Maximize the window if possible. If the window doesn't have a
      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: false

      # Whether to show fullscreen windows as always on top.
      shown_on_top: false

workspaces:
  - name: "1"
  - name: "2"
  - name: "3"
  - name: "4"
  - name: "5"
  - name: "6"
  - name: "7"
  - name: "8"
  - name: "9"

window_rules:
  - commands: ["ignore"]
    match:
      # Ignores any Zebar windows.
      - window_process: { equals: "zebar" }

      # Ignores picture-in-picture windows for browsers.
      - window_title: { regex: "[Pp]icture.in.[Pp]icture" }
        window_class: { regex: "Chrome_WidgetWin_1|MozillaDialogClass" }

      # Ignore rules for various 3rd-party apps.
      - window_process: { equals: "PowerToys.PowerAccent" }
      - window_process: { equals: "Lively" }
        window_class: { regex: "HwndWrapper*" }

binding_modes:
  # When enabled, the focused window can be resized via arrow keys or HJKL.
  - name: "resize"
    keybindings:
      - commands: ["resize --width -2%"]
        bindings: ["h", "left"]
      - commands: ["resize --width +2%"]
        bindings: ["l", "right"]
      - commands: ["resize --height +2%"]
        bindings: ["k", "up"]
      - commands: ["resize --height -2%"]
        bindings: ["j", "down"]
      # Press enter/escape to return to default keybindings.
      - commands: ["wm-disable-binding-mode --name resize"]
        bindings: ["escape", "enter"]

  # When enabled, all keybindings are disabled except for alt+shift+p which
  # returns to default keybindings.
  - name: "pause"
    keybindings:
      - commands: ["wm-disable-binding-mode --name pause"]
        bindings: ["f20+shift+p"]

keybindings:
  # Shift focus in a given direction.
  - commands: ["focus --direction left"]
    bindings: ["f20+h", "f20+left"]
  - commands: ["focus --direction right"]
    bindings: ["f20+l", "f20+right"]
  - commands: ["focus --direction up"]
    bindings: ["f20+k", "f20+up"]
  - commands: ["focus --direction down"]
    bindings: ["f20+j", "f20+down"]

  # Move focused window in a given direction.
  - commands: ["move --direction left"]
    bindings: ["f20+shift+h", "f20+shift+left"]
  - commands: ["move --direction right"]
    bindings: ["f20+shift+l", "f20+shift+right"]
  - commands: ["move --direction up"]
    bindings: ["f20+shift+k", "f20+shift+up"]
  - commands: ["move --direction down"]
    bindings: ["f20+shift+j", "f20+shift+down"]

  # Resize focused window by a percentage or pixel amount.
  # - commands: ["resize --width -2%"]
  #   bindings: ["f20+u"]
  # - commands: ["resize --width +2%"]
  #   bindings: ["f20+p"]
  # - commands: ["resize --height +2%"]
  #   bindings: ["f20+o"]
  # - commands: ["resize --height -2%"]
  #   bindings: ["f20+i"]

  # As an alternative to the resize keybindings above, resize mode enables
  # resizing via arrow keys or HJKL. The binding mode is defined above with
  # the name 'resize'.
  - commands: ["wm-enable-binding-mode --name resize"]
    bindings: ["f20+insert"]

  # Disables all keybindings until alt+shift+p is pressed again.
  - commands: ["wm-enable-binding-mode --name pause"]
    bindings: ["f20+shift+p"]

  # Change tiling direction. This determines where new tiling windows will
  # be inserted.
  - commands: ["toggle-tiling-direction"]
    bindings: ["f20+v"]

  # Change focus from tiling windows -> floating -> fullscreen.
  # - commands: ["wm-cycle-focus"]
  #   bindings: ["f20+f"]

  # Change the focused window to be floating.
  - commands: ["toggle-floating --centered"]
    bindings: ["f20+shift+f"]

  # Change the focused window to be tiling.
  - commands: ["toggle-tiling"]
    bindings: ["f20+t"]

  # Change the focused window to be fullscreen.
  # - commands: ["toggle-fullscreen"]
  #   bindings: ["f20+f"]

  # Minimize focused window.
  - commands: ["toggle-minimized"]
    bindings: ["f20+m"]

  # Close focused window.
  - commands: ["close"]
    bindings: ["f20+f4"]

  # Kill GlazeWM process safely.
  - commands: ["wm-exit"]
    bindings: ["f20+ctrl+alt+del"]

  # Re-evaluate configuration file.
  - commands: ["wm-reload-config"]
    bindings: ["f20+shift+r"]

  # Redraw all windows.
  - commands: ["wm-redraw"]
    bindings: ["f20+escape"]

  # Launch CMD terminal. Alternatively, use `shell-exec wt` or
  # `shell-exec %ProgramFiles%/Git/git-bash.exe` to start Windows
  # Terminal and Git Bash respectively.
  - commands: ["shell-exec alacritty.exe"]
    bindings: ["f20+oem_tilde"]
  - commands: ["shell-exec Files.exe"]
    bindings: ["f20+e"]

  # Focus the next/previous workspace defined in `workspaces` config.
  - commands: ["focus --next-workspace"]
    bindings: ["f20+s"]
  - commands: ["focus --prev-workspace"]
    bindings: ["f20+a"]

  # Focus the workspace that last had focus.
  - commands: ["focus --recent-workspace"]
    bindings: ["f20+d"]

  # Change focus to a workspace defined in `workspaces` config.
  - commands: ["focus --workspace 1"]
    bindings: ["f20+1"]
  - commands: ["focus --workspace 2"]
    bindings: ["f20+2"]
  - commands: ["focus --workspace 3"]
    bindings: ["f20+3"]
  - commands: ["focus --workspace 4"]
    bindings: ["f20+4"]
  - commands: ["focus --workspace 5"]
    bindings: ["f20+5"]
  - commands: ["focus --workspace 6"]
    bindings: ["f20+6"]
  - commands: ["focus --workspace 7"]
    bindings: ["f20+7"]
  - commands: ["focus --workspace 8"]
    bindings: ["f20+8"]
  - commands: ["focus --workspace 9"]
    bindings: ["f20+9"]

  # Move the focused window's parent workspace to a monitor in a given
  # direction.
  - commands: ["move-workspace --direction left"]
    bindings: ["f20+shift+a"]
  - commands: ["move-workspace --direction right"]
    bindings: ["f20+shift+f"]
  - commands: ["move-workspace --direction up"]
    bindings: ["f20+shift+d"]
  - commands: ["move-workspace --direction down"]
    bindings: ["f20+shift+s"]

  # Move focused window to a workspace defined in `workspaces` config.
  - commands: ["move --workspace 1", "focus --workspace 1"]
    bindings: ["f20+shift+1"]
  - commands: ["move --workspace 2", "focus --workspace 2"]
    bindings: ["f20+shift+2"]
  - commands: ["move --workspace 3", "focus --workspace 3"]
    bindings: ["f20+shift+3"]
  - commands: ["move --workspace 4", "focus --workspace 4"]
    bindings: ["f20+shift+4"]
  - commands: ["move --workspace 5", "focus --workspace 5"]
    bindings: ["f20+shift+5"]
  - commands: ["move --workspace 6", "focus --workspace 6"]
    bindings: ["f20+shift+6"]
  - commands: ["move --workspace 7", "focus --workspace 7"]
    bindings: ["f20+shift+7"]
  - commands: ["move --workspace 8", "focus --workspace 8"]
    bindings: ["f20+shift+8"]
  - commands: ["move --workspace 9", "focus --workspace 9"]
    bindings: ["f20+shift+9"]
